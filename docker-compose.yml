version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nexuschain-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - DIRECT_URL=${DIRECT_URL}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=http://localhost:3001
      - SEPOLIA_RPC_URL=${SEPOLIA_RPC_URL}
      - PRODUCT_REGISTRY_ADDRESS=${PRODUCT_REGISTRY_ADDRESS}
      - PAYMENT_ESCROW_ADDRESS=${PAYMENT_ESCROW_ADDRESS}
      - CHAIN_ID=11155111
      - LOG_LEVEL=info
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    networks:
      - nexuschain-network

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nexuschain-frontend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_SOCKET_URL=ws://localhost:3000
      - NEXT_PUBLIC_SEPOLIA_RPC_URL=${SEPOLIA_RPC_URL}
      - NEXT_PUBLIC_CHAIN_ID=11155111
      - NEXT_PUBLIC_PRODUCT_REGISTRY_ADDRESS=${PRODUCT_REGISTRY_ADDRESS}
      - NEXT_PUBLIC_PAYMENT_ESCROW_ADDRESS=${PAYMENT_ESCROW_ADDRESS}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    networks:
      - nexuschain-network

networks:
  nexuschain-network:
    driver: bridge

volumes:
  backend-logs:
