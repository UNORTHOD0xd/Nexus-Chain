name: CI - Build and Test

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  # Backend checks
  backend-checks:
    name: Backend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint || echo "No lint script configured"
        continue-on-error: true

      - name: Check Prisma schema
        run: npx prisma validate

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run tests
        run: npm test || echo "No tests configured yet"
        continue-on-error: true

      - name: Check build
        run: echo "Backend uses Node.js - no build step needed"

  # Frontend checks
  frontend-checks:
    name: Frontend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit || echo "TypeScript not configured"
        continue-on-error: true

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3000
          NEXT_PUBLIC_SOCKET_URL: ws://localhost:3000
          NEXT_PUBLIC_SEPOLIA_RPC_URL: https://ethereum-sepolia-rpc.publicnode.com
          NEXT_PUBLIC_CHAIN_ID: 11155111
          NEXT_PUBLIC_PRODUCT_REGISTRY_ADDRESS: 0xe0c52095175ba416b886D1Bda6A4F71F1958c8b2
          NEXT_PUBLIC_PAYMENT_ESCROW_ADDRESS: 0x416133e08B0cC8804bf5A00f0e3569D4A378EB63

      - name: Run tests
        run: npm test || echo "No tests configured yet"
        continue-on-error: true

  # Smart contract checks
  blockchain-checks:
    name: Smart Contracts CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./blockchain

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Forge build
        run: forge build

      - name: Run Forge tests
        run: forge test -vvv

      - name: Check gas snapshots
        run: forge snapshot --check || echo "No gas snapshots to check"
        continue-on-error: true

  # Docker build check
  docker-build:
    name: Docker Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: nexuschain-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: nexuschain-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Security checks
  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'  # Don't fail the build on vulnerabilities (just report)

  # Summary
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [backend-checks, frontend-checks, blockchain-checks, docker-build, security]
    if: always()

    steps:
      - name: Check CI status
        run: |
          echo "CI Pipeline completed!"
          echo "Backend: ${{ needs.backend-checks.result }}"
          echo "Frontend: ${{ needs.frontend-checks.result }}"
          echo "Blockchain: ${{ needs.blockchain-checks.result }}"
          echo "Docker: ${{ needs.docker-build.result }}"
          echo "Security: ${{ needs.security.result }}"

          if [ "${{ needs.backend-checks.result }}" == "failure" ] || \
             [ "${{ needs.frontend-checks.result }}" == "failure" ] || \
             [ "${{ needs.blockchain-checks.result }}" == "failure" ] || \
             [ "${{ needs.docker-build.result }}" == "failure" ]; then
            echo "❌ CI Failed"
            exit 1
          else
            echo "✅ CI Passed"
          fi
