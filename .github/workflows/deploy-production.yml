name: Deploy to Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'
      - '!.github/workflows/deploy-production.yml'
  workflow_dispatch:  # Allow manual trigger

jobs:
  # Pre-deployment checks
  pre-deployment:
    name: Pre-Deployment Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify environment variables
        run: |
          echo "Checking required secrets are set..."
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "❌ DATABASE_URL not set"
            exit 1
          fi
          if [ -z "${{ secrets.JWT_SECRET }}" ]; then
            echo "❌ JWT_SECRET not set"
            exit 1
          fi
          echo "✅ All required secrets are set"

      - name: Check version
        run: |
          echo "Current version: $(git describe --tags --always)"

  # Build and push Docker images
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: pre-deployment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (frontend)
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: production
      url: https://nexuschain.app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Option 1: Deploy to Railway
      - name: Deploy to Railway (if using)
        run: |
          echo "Deploy to Railway production environment"
          echo "railway up --service backend --environment production"
          echo "railway up --service frontend --environment production"
        continue-on-error: true

      # Option 2: Deploy to Vercel (Frontend)
      - name: Deploy Frontend to Vercel
        run: |
          echo "Deploy to Vercel production"
          echo "vercel --prod"
        continue-on-error: true

      # Option 3: Deploy to AWS/GCP/Azure
      - name: Deploy to Cloud (if using)
        run: |
          echo "Deploy using cloud provider CLI"
          echo "Example: aws ecs update-service..."
        continue-on-error: true

      - name: Database migrations
        run: |
          echo "Run Prisma migrations on production database"
          echo "npx prisma migrate deploy"
        continue-on-error: true

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          echo "Checking production health..."
          # curl -f https://api.nexuschain.app/health || exit 1
          echo "Health check would run here"

      - name: Smoke tests
        run: |
          echo "Running production smoke tests..."
          echo "Test critical endpoints"

  # Post-deployment
  post-deployment:
    name: Post-Deployment Tasks
    runs-on: ubuntu-latest
    needs: deploy-production
    if: success()

    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Automated production deployment

            Commit: ${{ github.sha }}
            Branch: ${{ github.ref }}
          draft: false
          prerelease: false
        continue-on-error: true

      - name: Notify success
        if: success()
        run: |
          echo "✅ Production deployment successful!"
          echo "Send success notification to team"

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ Production deployment failed!"
          echo "Send failure notification to team"
